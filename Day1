MySQL과 Eclipse를 연동해보겠습니다.

1.자신이 접속하고 싶은 데이터베이스의 이름을 매개변수로 갖고 매개변수를 이용하여 Mysql과 Eclipse를 연동시키는 makeConnection 함수를 생성합니다. 여기서 java.sql.Connection 인터페이스를 이용하여 데이베이스와의 연결을 나타내는 객체를 반환한다는 의미를 가지도록 Connection이라는 반환유형을 가지게 합니다.
![실행 결과](https://github.com/junhyeok1667/JDBC-PROJECT-insurance-/raw/main/%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C.png)

2. 매개변수로 받은 db가 비어있으면 "jdbc:mysql://localhost/"(사용중인 컴퓨터의 Mysql주소)을 받는 String 변수(url)를 하나 받고 db가 존재한다면 "jdbc:mysql://localhost/"+db를 받는 String 변수(url)를 설정해줍니다.
사용중인 Mysql의 아이디(id)와 비밀번호(pass)를 받는 변수들을 지정하고 데이터베이스의 연결을 나타내는 Connection객체를 선언하고 아직 선언되지 않았다는 의미인 Connection con = null을 작성해줍니다.

3. JDBC를 이용하여 데이터베이스와 연결하기 위해서 JDBC드라이버 클래스를 로드해야 하기 때문에 Class.for.name() 함수를 이용해야 합니다. Class.forName("com.mysql.cj.jdbc.Driver")를 선언해줍니다. 여기서 ()안에 있는 경로는 Mysql JDBC 드라이버 클래스의 전체 경로를 나타냅니다.
Driver.getConnection(url, id,pass) 함수를 이용하여 주어진 url, id, pass를 이용하여 데이터베이스와 연결을 합니다.
여기서 Driver.getConnection(url, id,pass) 함수와  Class.forName("com.mysql.cj.jdbc.Driver") 함수는 try-catch구문을 사용해야 하는데 만일 연결해야할 데이터베이스가 존재하지 않으면 ClassNotFoundException e, sql구문이 오류가 나면 SQLException e이라는 catch를 사용해야 합니다.

4. 실행을 시키면 아래와 같은 실행결과가 나옵니다!!

 
